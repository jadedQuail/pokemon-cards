name: Run tests

# TODO: Instead of using prefixes for working directories, use the working-directory tag.

on:
    push: {}
    pull_request: {}

jobs:
    test:
        runs-on: ubuntu-latest

        env:
            DB_HOST: 127.0.0.1
            DB_USER: root
            DB_PASSWORD: root
            DATABASE: pokemoncards
            API_URL: http://localhost:1111
            TEST_ADMIN_USERNAME: AfGk3LmN75
            TEST_ADMIN_PASSWORD: Welcome2025!

        services:
            mysql:
                image: mysql:8.0
                ports:
                    - 3306:3306
                env:
                    MYSQL_ROOT_PASSWORD: root
                    MYSQL_DATABASE: pokemoncards
                options: >-
                    --health-cmd="mysqladmin ping --silent"
                    --health-interval=10s
                    --health-timeout=5s
                    --health-retries=5

        steps:
            - name: Checkout code
              uses: actions/checkout@v3

            - name: Setup Node.js
              uses: actions/setup-node@v3
              with:
                  node-version: "22"

            - name: Install & run frontend tests
              run: |
                  npm install --prefix front-end
                  npm test --prefix front-end

            - name: Install & run backend tests
              run: |
                  npm install --prefix back-end
                  npm test --prefix back-end

            - name: Wait for MySQL to be ready
              run: |
                  until mysqladmin ping -h 127.0.0.1 -u root -proot --silent; do
                    echo "Waiting for database connection..."
                    sleep 3
                  done

            - name: Set up database schema
              run: |
                  mysql -h "$DB_HOST" -u "$DB_USER" -p"$DB_PASSWORD" "$DATABASE" \
                    < back-end/database/DDL.sql

            - name: Seed test admin user
              working-directory: back-end
              run: |
                  node -e "
                    import bcrypt from 'bcrypt';
                    import mysql from 'mysql2/promise';
                    (async () => {
                      const pool = mysql.createPool({
                        host:     process.env.DB_HOST,
                        user:     process.env.DB_USER,
                        password: process.env.DB_PASSWORD,
                        database: process.env.DATABASE,
                      });
                      
                      const hash = await bcrypt.hash(process.env.TEST_ADMIN_PASSWORD, 10);
                      
                      await pool.query(
                        \`INSERT INTO Users (username, password_hash, is_admin)
                          VALUES (?, ?, 1)
                          ON DUPLICATE KEY UPDATE
                            password_hash = VALUES(password_hash),
                            is_admin      = VALUES(is_admin)\`,
                        [process.env.TEST_ADMIN_USERNAME, hash]
                      );
                      
                      await pool.end();
                      process.exit(0);
                    })();
                  "
                  echo "Seed step completed"

            - name: Install & start back-end server
              env:
                  PORT: 1111
              run: |
                  npm install --prefix back-end
                  npm run start --prefix back-end &

            - name: Wait for back-end to be ready
              run: |
                  until curl --silent http://127.0.0.1:1111/health; do
                    echo "Waiting for back-end…"
                    sleep 2
                  done

            - name: Install & start front-end server
              run: |
                  npm install --prefix front-end
                  npm run dev --prefix front-end &

            - name: Wait for front-end to be ready
              run: |
                  until curl --silent --fail http://localhost:3000/ >/dev/null; do
                    echo "Waiting for front-end…"
                    sleep 2
                  done

            - name: Install Playwright and browsers
              run: |
                  npm install --prefix front-end @playwright/test
                  npx playwright install

            - name: Run Playwright tests
              working-directory: front-end
              run: |
                  npx playwright test
